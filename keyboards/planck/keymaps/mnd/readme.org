#+begin_src emacs-lisp
  ;; org-table move cell
  ;; https://www.mail-archive.com/emacs-orgmode@gnu.org/msg98407.html
  ;; https://www.reddit.com/r/emacs/comments/583n1x/movecopy_a_cel_to_the_right/
  (defun md-org-table-swap-cells (row col nextrow nextcol)
    (interactive)
    (let ((curfield (org-table-get row col))
          (nextfield (org-table-get nextrow nextcol)))
      (org-table-analyze)
      (org-table-put row col nextfield)
      (org-table-put nextrow nextcol curfield)
      (org-table-align)
      (org-table-goto-field (format "@%s$%s" nextrow nextcol))
      (message "md-org-table-swap-cells %s:%s <-> %s:%s"
               (format "@%s$%s" row col) curfield (format "@%s$%s" nextrow nextcol) nextfield)
      ))

  (defun md-org-table-swap-cell-right ()
    (interactive)
    (if (org-at-table-p)
        (let* ((col (org-table-current-column))
               (row (org-table-current-dline))
               (nextrow row)
               (nextcol (+ col 1)))
          (md-org-table-swap-cells row col nextrow nextcol)
          (md-update-todo-status))
      (org-shiftright)
      ))
  (define-key org-mode-map (kbd "S-<right>") 'md-org-table-swap-cell-right)

  (defun md-org-table-swap-cell-left ()
    (interactive)
    (if (org-at-table-p)
        (let* ((col (org-table-current-column))
               (row (org-table-current-dline))
               (nextrow row)
               (nextcol (- col 1)))
          (md-org-table-swap-cells row col nextrow nextcol)
          (md-update-todo-status))
      (org-shiftleft)))
  (define-key org-mode-map (kbd "S-<left>") 'md-org-table-swap-cell-left)

  (defun md-org-table-swap-cell-up ()
    (interactive)
    (if (org-at-table-p)
        (let* ((col (org-table-current-column))
               (row (org-table-current-dline))
               (nextrow (- row 1))
               (nextcol col))
          (md-org-table-swap-cells row col nextrow nextcol)
          (md-update-todo-status))
      (org-shiftup)))
  (define-key org-mode-map (kbd "S-<up>") 'md-org-table-swap-cell-up)

  (defun md-org-table-swap-cell-down ()
    (interactive)
    (if (org-at-table-p)
        (let* ((col (org-table-current-column))
               (row (org-table-current-dline))
               (nextrow (+ row 1))
               (nextcol col))
          (md-org-table-swap-cells row col nextrow nextcol)
          (md-update-todo-status))
      (org-shiftup)))
  (define-key org-mode-map (kbd "S-<down>") 'md-org-table-swap-cell-down)
#+end_src

#+RESULTS:
: md-org-table-swap-cell-down

* Default
** Qwerty
   | Tab  |   Q  |   W  |   E  |   R  |   T  |   Y  |   U  |   I  |   O  |   P  | Bksp |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Esc  |   A  |   S  |   D  |   F  |   G  |   H  |   J  |   K  |   L  |   ;  |  "   |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Shift|   Z  |   X  |   C  |   V  |   B  |   N  |   M  |   ,  |   .  |   /  |Enter |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Brite| Ctrl | Alt  | GUI  |Lower |  Spc | Spc  |Raise | Left | Down |  Up  |Right |

** Colemak
   | Tab  |   Q  |   W  |   F  |   P  |   G  |   J  |   L  |   U  |   Y  |   ;  | Bksp |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Esc  |   A  |   R  |   S  |   T  |   D  |   H  |   N  |   E  |   I  |   O  |  "   |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Shift|   Z  |   X  |   C  |   V  |   B  |   K  |   M  |   ,  |   .  |   /  |Enter |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Brite| Ctrl | Alt  | GUI  |Lower |  Spc | Spc  |Raise | Left | Down |  Up  |Right |

** Dvorak
   | Tab  |   "  |   ,  |   .  |   P  |   Y  |   F  |   G  |   C  |   R  |   L  | Bksp |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Esc  |   A  |   O  |   E  |   U  |   I  |   D  |   H  |   T  |   N  |   S  |  /   |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Shift|   ;  |   Q  |   J  |   K  |   X  |   B  |   M  |   W  |   V  |   Z  |Enter |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Brite| Ctrl | Alt  | GUI  |Lower |  Spc | Spc  |Raise | Left | Down |  Up  |Right |

** Lower
   |   ~  |   !  |   @  |   #  |   $  |   %  |   ^  |   &  |   *  |   (  |   )  | Bksp |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Del  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |   _  |   +  |   {  |   }  |  |   |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   |      |  F7  |  F8  |  F9  |  F10 |  F11 |  F12 |ISO ~ |ISO | | Home | End  |      |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   |      |      |      |      |      |      |      |      | Next | Vol- | Vol+ | Play |

** Raise
   |   `  |   1  |   2  |   3  |   4  |   5  |   6  |   7  |   8  |   9  |   0  | Bksp |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Del  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |   -  |   =  |   [  |   ]  |  \   |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   |      |  F7  |  F8  |  F9  |  F10 |  F11 |  F12 |ISO # |ISO / |Pg Up |Pg Dn |      |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   |      |      |      |      |      |      |      |      | Next | Vol- | Vol+ | Play |

** Plover layer (http://opensteno.org)
   |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   |      |   S  |   T  |   P  |   H  |   *  |   *  |   F  |   P  |   L  |   T  |   D  |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   |      |   S  |   K  |   W  |   R  |   *  |   *  |   R  |   B  |   G  |   S  |   Z  |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   | Exit |      |      |   A  |   O  |      |      |   E  |   U  |      |      |      |

** Adjust (Lower + Raise), RGB CONTROL
   |      | Reset|Debug | RGB  |RGBMOD| HUE+ | HUE- | SAT+ | SAT- |BRGTH+|BRGTH-|  Del |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   |      |      |MUSmod|Aud on|Audoff|AGnorm|AGswap|Qwerty|Colemk|Dvorak|Plover|      |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   |      |Voice-|Voice+|Mus on|Musoff|MIDIon|MIDIof|TermOn|TermOf|      |      |      |
   |------+------+------+------+------+------+------+------+------+------+------+------|
   |      |      |      |      |      |      |      |      |      |      |      |      |

* DONE MND
  CLOSED: [2020-03-06 Fri 10:29]
  | Tab  |   Q  |   W  |   E  |   R  |   T  |   Y  |   U  |   I  |   O  |   P  | Bksp |
  |------+------+------+------+------+------+------+------+------+------+------+------|
  | Esc  |   A  |   S  |   D  |   F  |   G  |   H  |   J  |   K  |   L  |   ;  |  "   |
  |------+------+------+------+------+------+------+------+------+------+------+------|
  | Shift|   Z  |   X  |   C  |   V  |   B  |   N  |   M  |   ,  |   .  |   /  |Enter |
  |------+------+------+------+------+------+------+------+------+------+------+------|
  | Brite| Ctrl | Alt  | GUI  |Lower |  Spc | Spc  |Raise | Left | Down |  Up  |Right |

[_QWERTY] = LAYOUT_planck_grid(
KC_TAB,   KC_Q,     KC_W,     KC_E,     KC_R,   KC_T,    KC_Y,    KC_U,   KC_I,     KC_O,     KC_P,     KC_BSPC,
KC_ESC,   KC_A,     KC_S,     KC_D,     KC_F,   KC_G,    KC_H,    KC_J,   KC_K,     KC_L,     KC_SCLN,  KC_QUOT,
KC_LSFT,  KC_Z,     KC_X,     KC_C,     KC_V,   KC_B,    KC_N,    KC_M,   KC_COMM,  KC_DOT,   KC_SLSH,  KC_ENT,
BACKLIT,  KC_LCTL,  KC_LALT,  KC_LGUI,  LOWER,  KC_SPC,  KC_SPC,  RAISE,  KC_LEFT,  KC_DOWN,  KC_UP,    KC_RGHT
),

  | Esc   | Q   | W     | E     | R   | T   | Y   | U     | I     | O    | P   | Bksp  |
  |-------+-----+-------+-------+-----+-----+-----+-------+-------+------+-----+-------|
  | Ctrl  | A   | S     | D     | F   | G   | H   | J     | K     | L    | ;   | "     |
  |-------+-----+-------+-------+-----+-----+-----+-------+-------+------+-----+-------|
  | Shift | Z   | X     | C     | V   | B   | N   | M     | ,     | .    | /   | Shift |
  |-------+-----+-------+-------+-----+-----+-----+-------+-------+------+-----+-------|
  | Tab   | Del | Brite | Lower | GUI | Alt | Spc | Enter | Raise | Home | End | Enter |

[_QWERTY] = LAYOUT_planck_grid(
KC_ESC,   KC_Q,    KC_W,     KC_E,     KC_R,     KC_T,     KC_Y,    KC_U,    KC_I,     KC_O,     KC_P,     KC_BSPC,
KC_LCTL,  KC_A,    KC_S,     KC_D,     KC_F,     KC_G,     KC_H,    KC_J,    KC_K,     KC_L,     KC_SCLN,  KC_QUOT,
KC_LSFT,  KC_Z,    KC_X,     KC_C,     KC_V,     KC_B,     KC_N,    KC_M,    KC_COMM,  KC_DOT,   KC_SLSH,  KC_RSFT,
KC_TAB,   KC_DEL,  BACKLIT,  KC_LALT,  KC_LGUI,  KC_LALT,  KC_SPC,  KC_ENT,  RAISE,    KC_HOME,  KC_END,   KC_ENT
),

  |   ~  |   !  |   @  |   #  |   $  |   %  |   ^  |   &  |   *  |   (  |   )  | Bksp |
  |------+------+------+------+------+------+------+------+------+------+------+------|
  | Del  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |   _  |   +  |   {  |   }  |  |   |
  |------+------+------+------+------+------+------+------+------+------+------+------|
  |      |  F7  |  F8  |  F9  |  F10 |  F11 |  F12 |ISO ~ |ISO | | Home | End  |      |
  |------+------+------+------+------+------+------+------+------+------+------+------|
  |      |      |      |      |      |      |      |      | Left | Down |  Up  |Right |

[_LOWER] = LAYOUT_planck_grid(
KC_TILD,  KC_EXLM,  KC_AT,  KC_HASH,  KC_DLR,  KC_PERC,  KC_CIRC,  KC_AMPR,     KC_ASTR,     KC_LPRN,  KC_RPRN,  KC_BSPC,
KC_DEL,   KC_F1,    KC_F2,  KC_F3,    KC_F4,   KC_F5,    KC_F6,    KC_UNDS,     KC_PLUS,     KC_LCBR,  KC_RCBR,  KC_PIPE,
_______,    KC_F7,    KC_F8,  KC_F9,    KC_F10,  KC_F11,   KC_F12,   S(KC_NUHS),  S(KC_NUBS),  KC_HOME,  KC_END,   _______,
_______,    _______,    _______,  _______,    _______,   _______,    _______,    _______,       KC_LEFT,     KC_DOWN,  KC_UP,    KC_RGHT
),

  | `    | 1    | 2    | 3    | 4   | 5   | 6   | 7     | 8     | 9     | 0     | Bksp |
  |------+------+------+------+-----+-----+-----+-------+-------+-------+-------+------|
  | Del  | F1   | F2   | F3   | F4  | F5  | F6  | -     | =     | [     | ]     | \    |
  |------+------+------+------+-----+-----+-----+-------+-------+-------+-------+------|
  |      | F7   | F8   | F9   | F10 | F11 | F12 | ISO # | ISO / | Pg Up | Pg Dn |      |
  |------+------+------+------+-----+-----+-----+-------+-------+-------+-------+------|
  | Play | Next | Vol- | Vol+ |     |     |     |       |       |       |       |      |

[_RAISE] = LAYOUT_planck_grid(
KC_GRV,   KC_1,     KC_2,     KC_3,     KC_4,    KC_5,    KC_6,    KC_7,     KC_8,     KC_9,     KC_0,     KC_BSPC,
KC_DEL,   KC_F1,    KC_F2,    KC_F3,    KC_F4,   KC_F5,   KC_F6,   KC_MINS,  KC_EQL,   KC_LBRC,  KC_RBRC,  KC_BSLS,
_______,    KC_F7,    KC_F8,    KC_F9,    KC_F10,  KC_F11,  KC_F12,  KC_NUHS,  KC_NUBS,  KC_PGUP,  KC_PGDN,  _______,
KC_MPLY,  KC_MNXT,  KC_VOLD,  KC_VOLU,  _______,   _______,   _______,   _______,    _______,    _______,    _______,    _______
),

  | #    | # | # | # | # | # | # | # | # | # | # | # |
  |------+---+---+---+---+---+---+---+---+---+---+---|
  |      | S | T | P | H | * | * | F | P | L | T | D |
  |------+---+---+---+---+---+---+---+---+---+---+---|
  |      | S | K | W | R | * | * | R | B | G | S | Z |
  |------+---+---+---+---+---+---+---+---+---+---+---|
  | Exit |   |   |   | A | O | E | U |   |   |   |   |

[_PLOVER] = LAYOUT_planck_grid(
KC_1,     KC_1,     KC_1,     KC_1,     KC_1,  KC_1,  KC_1,  KC_1,  KC_1,     KC_1,     KC_1,     KC_1  ,
XXXXXXX,  KC_Q,     KC_W,     KC_E,     KC_R,  KC_T,  KC_Y,  KC_U,  KC_I,     KC_O,     KC_P,     KC_LBRC,
XXXXXXX,  KC_A,     KC_S,     KC_D,     KC_F,  KC_G,  KC_H,  KC_J,  KC_K,     KC_L,     KC_SCLN,  KC_QUOT,
EXT_PLV,  XXXXXXX,  XXXXXXX,  XXXXXXX,  KC_C,  KC_V,  KC_N,  KC_M,  XXXXXXX,  XXXXXXX,  XXXXXXX,  XXXXXXX
),


/* Plover layer (http://opensteno.org)
 * ,-----------------------------------------------------------------------------------.
 * |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |
 * |------+------+------+------+------+-------------+------+------+------+------+------|
 * |  FN  |   S  |   T  |   P  |   H  |   *  |   *  |   F  |   P  |   L  |   T  |   D  |
 * |------+------+------+------+------+------|------+------+------+------+------+------|
 * |      |   S  |   K  |   W  |   R  |   *  |   *  |   R  |   B  |   G  |   S  |   Z  |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Exit |      |      |   A  |   O  |             |   E  |   U  |  PWR | RES1 | RES2 |
 * `-----------------------------------------------------------------------------------'
 */

[_STENO] = LAYOUT_planck_grid(
STN_N1,   STN_N2,   STN_N3,   STN_N4,   STN_N5,  STN_N6,   STN_N7,   STN_N8,  STN_N9,   STN_NA,   STN_NB,   STN_NC  ,
STN_FN,   STN_S1,   STN_TL,   STN_PL,   STN_HL,  STN_ST1,  STN_ST3,  STN_FR,  STN_PR,   STN_LR,   STN_TR,   STN_DR  ,
XXXXXXX,  STN_S2,   STN_KL,   STN_WL,   STN_RL,  STN_ST2,  STN_ST4,  STN_RR,  STN_BR,   STN_GR,   STN_SR,   STN_ZR  ,
EXT_PLV,  XXXXXXX,  XXXXXXX,  XXXXXXX,  STN_A,   STN_O,    STN_E,    STN_U,   XXXXXXX,  STN_PWR,  STN_RE1,  STN_RE2
),
